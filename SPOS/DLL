import java.util.*;
import java.util.Scanner;

public class b1 {  
   static {
      System.loadLibrary("b1"); 
                                   
   }
 
  
   private native void add(int a , int b);
   private native void sub(int a, int b);
   private native void mult(int a, int b);
   private native void div(int a, int b);
 
   // Test Driver
   public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter value for a: ");
      int a = sc.nextInt();
      System.out.println("Enter value for b: ");
      int b = sc.nextInt();
      
      
      new b1().add(a,b);  
      new b1().sub(a,b);
      new b1().mult(a,b);
      new b1().div(a,b);
   }
}



C program for compiling and run the java code -:

#include <jni.h>
#include <stdio.h>
#include "B1.h"
JNIEXPORT int JNICALL Java_B1_add(JNIEnv *env, jobject obj, jint a, jint b)
{
printf("\n%d + %d = %d\n",a,b,(a+b));
return;
}
JNIEXPORT int JNICALL Java_B1_sub(JNIEnv *env, jobject obj, jint a, jint b)
{
 printf("\n%d - %d = %d\n",a,b,(a-b));
 return;
}
JNIEXPORT int JNICALL Java_B1_mult(JNIEnv *env, jobject obj, jint a, jint b)
{
 printf("\n%d * %d = %d\n",a,b,(a*b));
 return;
}
JNIEXPORT int JNICALL Java_B1_div(JNIEnv *env, jobject obj, jint a, jint b)
{
 printf("\n%d / %d = %d\n",a,b,(a/b));
 return;
}

locate openjdk

javac b1.java
javah b1 
gcc -fPIC -I"jvm java8loc"-I"/jvm java8 linuxloc" -shared -o libb1.so b1.c
java -Djava.library.path=. b1



import java.util.*;
import java.util.Scanner;

public class b1 {  
   static {
      System.loadLibrary("b1"); 
                                   
   }
 
  
   private native void add(int a , int b);
   private native void sub(int a, int b);
   private native void mult(int a, int b);
   private native void div(int a, int b);
 
   // Test Driver
   public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter value for a: ");
      int a = sc.nextInt();
      System.out.println("Enter value for b: ");
      int b = sc.nextInt();
      
      
      new b1().add(a,b);  
      new b1().sub(a,b);
      new b1().mult(a,b);
      new b1().div(a,b);
   }
}

#include <jni.h>       
#include <stdio.h>      
#include "b1.h"   
 
JNIEXPORT void JNICALL Java_b1_add(JNIEnv *env, jobject thisObj,int a,int b) {
    int sum;
    sum = b + a;      
    
    printf("%d + %d = %d",a, b, sum);
    printf("\n");
   return;
}

JNIEXPORT void JNICALL Java_b1_mult(JNIEnv *env, jobject thisObj,int a,int b) {
    int mul;
    mul = b*a;      
    
    printf("%d * %d = %d",a, b,mul);
    printf("\n");
   return;
 
}

JNIEXPORT void JNICALL Java_b1_div(JNIEnv *env, jobject thisObj,int a,int b) {
    int div;
    div = b/a;      
    
    printf("%d / %d = %d",a, b, div);
    printf("\n");
   return;
}

JNIEXPORT void JNICALL Java_b1_sub(JNIEnv *env, jobject thisObj,int a,int b) {
    int sub;
    sub = a - b;      
    
    printf("%d - %d = %d",a, b, sub);
   return;
}
